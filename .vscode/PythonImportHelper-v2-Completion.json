[
    {
        "label": "pandas",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pandas",
        "description": "pandas",
        "detail": "pandas",
        "documentation": {}
    },
    {
        "label": "pyodbc",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pyodbc",
        "description": "pyodbc",
        "detail": "pyodbc",
        "documentation": {}
    },
    {
        "label": "create_engine",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "create_engine",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "socket",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "socket",
        "description": "socket",
        "detail": "socket",
        "documentation": {}
    },
    {
        "label": "setuptools",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "setuptools",
        "description": "setuptools",
        "detail": "setuptools",
        "documentation": {}
    },
    {
        "label": "exceltoDBtable",
        "kind": 6,
        "importPath": "build.lib.exceltosqlserver.exceltosqlserver",
        "description": "build.lib.exceltosqlserver.exceltosqlserver",
        "peekOfCode": "class exceltoDBtable:\n    #  Available for sql server and mysql now\n    def __init__(self,\n                 filePath: str,\n                 hostORip: str = \"\",\n                 usrID: str = \"\",\n                 pwd: str = \"\",\n                 database: str = \"\",\n                 rename_table: str = \"\"):\n        if not any([hostORip, database, usrID, pwd]):",
        "detail": "build.lib.exceltosqlserver.exceltosqlserver",
        "documentation": {}
    },
    {
        "label": "hostname",
        "kind": 5,
        "importPath": "build.lib.exceltosqlserver.exceltosqlserver",
        "description": "build.lib.exceltosqlserver.exceltosqlserver",
        "peekOfCode": "hostname = socket.gethostname()\nlocal_ip = socket.gethostbyname(hostname)\nclass exceltoDBtable:\n    #  Available for sql server and mysql now\n    def __init__(self,\n                 filePath: str,\n                 hostORip: str = \"\",\n                 usrID: str = \"\",\n                 pwd: str = \"\",\n                 database: str = \"\",",
        "detail": "build.lib.exceltosqlserver.exceltosqlserver",
        "documentation": {}
    },
    {
        "label": "local_ip",
        "kind": 5,
        "importPath": "build.lib.exceltosqlserver.exceltosqlserver",
        "description": "build.lib.exceltosqlserver.exceltosqlserver",
        "peekOfCode": "local_ip = socket.gethostbyname(hostname)\nclass exceltoDBtable:\n    #  Available for sql server and mysql now\n    def __init__(self,\n                 filePath: str,\n                 hostORip: str = \"\",\n                 usrID: str = \"\",\n                 pwd: str = \"\",\n                 database: str = \"\",\n                 rename_table: str = \"\"):",
        "detail": "build.lib.exceltosqlserver.exceltosqlserver",
        "documentation": {}
    },
    {
        "label": "exceltoDBtable",
        "kind": 6,
        "importPath": "exceltosqlserver.exceltosqlserver",
        "description": "exceltosqlserver.exceltosqlserver",
        "peekOfCode": "class exceltoDBtable:\n    #  Available for sql server and mysql now\n    def __init__(self,\n                 filePath: str,\n                 hostORip: str = \"\",\n                 usrID: str = \"\",\n                 pwd: str = \"\",\n                 database: str = \"\",\n                 rename_table: str = \"\"):\n        if not any([hostORip, database, usrID, pwd]):",
        "detail": "exceltosqlserver.exceltosqlserver",
        "documentation": {}
    },
    {
        "label": "hostname",
        "kind": 5,
        "importPath": "exceltosqlserver.exceltosqlserver",
        "description": "exceltosqlserver.exceltosqlserver",
        "peekOfCode": "hostname = socket.gethostname()\nlocal_ip = socket.gethostbyname(hostname)\nclass exceltoDBtable:\n    #  Available for sql server and mysql now\n    def __init__(self,\n                 filePath: str,\n                 hostORip: str = \"\",\n                 usrID: str = \"\",\n                 pwd: str = \"\",\n                 database: str = \"\",",
        "detail": "exceltosqlserver.exceltosqlserver",
        "documentation": {}
    },
    {
        "label": "local_ip",
        "kind": 5,
        "importPath": "exceltosqlserver.exceltosqlserver",
        "description": "exceltosqlserver.exceltosqlserver",
        "peekOfCode": "local_ip = socket.gethostbyname(hostname)\nclass exceltoDBtable:\n    #  Available for sql server and mysql now\n    def __init__(self,\n                 filePath: str,\n                 hostORip: str = \"\",\n                 usrID: str = \"\",\n                 pwd: str = \"\",\n                 database: str = \"\",\n                 rename_table: str = \"\"):",
        "detail": "exceltosqlserver.exceltosqlserver",
        "documentation": {}
    }
]